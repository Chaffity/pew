{"version":3,"sources":["../../packages/pew/src/main/engine/Platform/config/index.js","../../packages/pew/src/main/engine/Platform/hooks/index.js","../../packages/pew/src/main/engine/Platform/input/index.js","../../packages/pew/src/main/engine/Platform/loop/index.js","../../packages/pew/src/main/engine/Platform/utils/index.js","../../packages/pew/src/main/engine/Platform/index.js","../../packages/pew/src/main/engine/View/Item/properties/collisions.js","../../packages/pew/src/main/engine/View/Item/properties/gravity.js","../../packages/pew/src/main/engine/View/Item/properties/resistance.js","../../packages/pew/src/main/engine/View/Item/properties/vectors.js","../../packages/pew/src/main/engine/View/Item/index.js","../../packages/pew/src/main/engine/View/Layer/index.js","../../packages/pew/src/main/engine/View/index.js","../../packages/pew/src/main/engine/index.js","index.js"],"names":["fpsTarget","performanceDetails","boundryBoxEnabled","debugEnabled","debugBox","hooks","on","hookName","fn","hasOwnProperty","push","fire","args","keyboard","upArrow","downArrow","leftArrow","rightArrow","document","addEventListener","e","keyCode","shouldRun","tasks","renders","tasksTime","tasksTicks","rendersTime","rendersTicks","add","priority","scope","isRender","Error","sort","a","b","start","window","requestAnimationFrame","processTasks","processRenders","stop","processingStart","performance","now","task","call","processingEnd","config","setTimeout","fpsStart","render","fpsEnd","onerror","stats","body","appendChild","createElement","style","position","left","bottom","background","padding","startTime","totalTime","setInterval","debugMsg","roundNumber","innerHTML","console","debug","number","Math","round","uid","generateUid","toString","randomX","randomNumberBetween","innerWidth","randomY","innerHeight","floor","random","randomColorHex","getDotProduct","i","v","length","pythagoras","sqrt","adjacentLength","angle","hypotenuse","cos","PI","oppositeLength","sin","getAngleBetweenThreePoints","c","ab","dx","dy","bc","acos","getCenterBetweenTwoPoints","degreesToRadians","degrees","radiansToDegrees","radians","pps","distance","Platform","input","loop","utils","updates","collisions","superclass","includes","i1","n","i2","entity1","entity2","e1radius","getWidth","e2radius","getCenterCoordinates","e1dx","e1dy","e2dx","e2dy","shift","Infinity","entities","gravity","arguments","gravityAmount","gravityDx","gravityDy","gravityEnabledDx","gravityEnabledDy","setGravityDx","setGravityDy","entity","ballCentre","ballGravity","getGravity","diffX","diffY","setVectorX","getVectorX","setVectorY","getVectorY","resistance","vectorX","vectorY","vectors","x","y","item","Vectors","itemCenterCoordinates","getCoordinates","ballX","ballY","setCoordinates","Item","width","height","canvas","_canvas","_ctx","getContext","setDxCoordinate","setDyCoordinate","_dy","properties","reduce","property","Layer","_entities","resizeCanvas","renderLayer","draw","clearRect","_boundariesLocked","_width","_height","getCanvas","entityX","entityY","strokeRect","drawImage","View","layers","createLayer","layer","createItem","Function","coordinates","dimensions","getLayer","getLayers","setFPS","fps","Ball","color","with","ctx","radius","beginPath","arc","fillStyle","fill","closePath","marker","addEntity","ballA","ballB","reflectVectorX","reflectVectorY","setGravity"],"mappings":"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","file":"orbit.f67ef6c8.js","sourceRoot":"../samples/orbit","sourcesContent":["'use strict'\n\nexport const fpsTarget = 60\n\nexport const performanceDetails = true\n\nexport const boundryBoxEnabled = false\n\nexport const debugEnabled = true\n\nexport const debugBox = false\n","'use strict'\n\nconst hooks = {}\n\n/**\n * @description This method will register a listener for the provided \"hookName\".\n *\n * @param {String}   hookName - The name of the hook\n * @param {Function} fn       - The function to be called\n */\nexport function on (hookName, fn) {\n  if (hooks.hasOwnProperty(hookName)) {\n    hooks[hookName].push(fn)\n  } else {\n    hooks[hookName] = [fn]\n  }\n}\n\n/**\n * @description This method will execute any registered listeners for the provided \"hookName\".\n *\n * @param {String} hookName - The name of the hook\n * @param {Any[]}  args     - The arguments to be passed\n */\nexport function fire (hookName, args) {\n  if (!hooks.hasOwnProperty(hookName)) {\n    return\n  }\n\n  for (let fn of hooks[hookName]) {\n    fn(...args)\n  }\n}\n","'use strict'\n\nexport const keyboard = {\n  upArrow: false,\n  downArrow: false,\n  leftArrow: false,\n  rightArrow: false\n}\n\ndocument.addEventListener('keydown', e => {\n  switch (e.keyCode) {\n    case 38:\n    case 87:\n      keyboard.upArrow = true\n      break\n    case 40:\n    case 83:\n      keyboard.downArrow = true\n      break\n    case 37:\n    case 65:\n      keyboard.leftArrow = true\n      break\n    case 39:\n    case 68:\n      keyboard.rightArrow = true\n      break\n  }\n}, false)\n\ndocument.addEventListener('keyup', e => {\n  switch (e.keyCode) {\n    case 38:\n    case 87:\n      keyboard.upArrow = false\n      break\n    case 40:\n    case 83:\n      keyboard.downArrow = false\n      break\n    case 37:\n    case 65:\n      keyboard.leftArrow = false\n      break\n    case 39:\n    case 68:\n      keyboard.rightArrow = false\n      break\n  }\n}, false)\n","'use strict'\n\n// Dependencies\nimport * as config from '../config'\n\n/**\n * @description The loop maintains a consistant frame-rate throughout the lifecycle of the application.\n */\n\nlet tasks = []\nlet renders = []\nlet shouldRun\nlet tasksTime = 0\nlet tasksTicks = 0\nlet rendersTime = 0\nlet rendersTicks = 0\n\n/**\n * @description This method will add the supplied function to the processing cycle.\n *\n * @param {Function} fn - The function to add to the processing cycle\n *\n * @returns {Object} The loop object\n */\nexport function add (fn, priority = 60, scope, isRender = false) {\n  // Ensure that a function has been provided\n  if (typeof fn !== 'function') {\n    throw Error('Only functions may be added to the loop')\n  }\n\n  if (isRender) {\n    renders.push({ fn, priority, scope })\n\n    // Sort the renders by priority\n    renders = renders.sort((a, b) => a.priority < b.priority)\n  } else {\n    tasks.push({ fn, priority, scope })\n\n    // Sort the task by priority\n    tasks = tasks.sort((a, b) => a.priority < b.priority)\n  }\n}\n\n/**\n * @description This method will start the processing cycle.\n *\n * @returns {Object} The loop object\n */\nexport function start () {\n  shouldRun = true\n\n  window.requestAnimationFrame(() => {\n    processTasks()\n    processRenders()\n  })\n}\n\n/**\n * @description This method will stop the processing cycle.\n *\n * @returns {Object} The loop object\n */\nexport function stop () {\n  shouldRun = false\n}\n\nfunction processTasks () {\n  if (!shouldRun) {\n    return\n  }\n\n  // Process Recording - start\n  const processingStart = performance.now()\n\n  for (let task of tasks) {\n    task.fn.call(task.scope)\n  }\n\n  // Process Recording - end\n  const processingEnd = performance.now()\n\n  // Process Details\n  if (config.performanceDetails) {\n    tasksTime += processingEnd - processingStart\n  }\n\n  tasksTicks++\n\n  setTimeout(processTasks, 10 - (processingEnd - processingStart))\n}\n\nfunction processRenders () {\n  if (!shouldRun) {\n    return\n  }\n\n  // FPS Recording - start\n  const fpsStart = performance.now()\n\n  for (let render of renders) {\n    render.fn.call(render.scope)\n  }\n\n  // FPS Recording - end\n  const fpsEnd = performance.now()\n  \n  // FPS Details\n  if (config.performanceDetails) {\n    rendersTime += fpsEnd - fpsStart\n  }\n\n  rendersTicks++\n\n  setTimeout(processRenders, 1000 / config.fpsTarget - (fpsEnd - fpsStart))\n}\n\nwindow.onerror = stop\n\n// FPS Details\nif (config.performanceDetails) {\n  let stats\n\n  if (config.debugBox) {\n    stats = document.body.appendChild(document.createElement('div'))\n\n    stats.style.position = 'absolute'\n    stats.style.left = '10px'\n    stats.style.bottom = '10px'\n    stats.style.background = 'white'\n    stats.style.padding = '10px'\n  }\n\n  let startTime = performance.now()\n  let totalTime\n\n  setInterval(() => {\n    totalTime = performance.now() - startTime\n    tasksTime = (tasksTime / totalTime) * 1000\n    tasksTicks = (tasksTicks / totalTime) * 1000\n\n    const debugMsg =\n      `(Actual duration: ${roundNumber(totalTime)}ms)\\n\\n` +\n      `RENDERS: [${roundNumber(rendersTicks)}] \\n\\n` +\n      `- Time spent rendering: ${roundNumber(rendersTime)}ms\\n` +\n      `- Average frame duration: ${roundNumber(totalTime / rendersTicks)}ms\\n` +\n      `TASKS: [${roundNumber(tasksTicks)}]\\n\\n` +\n      `- Time spent processing: ${roundNumber(tasksTime)}ms\\n` +\n      `- Average tick duration: ${roundNumber(tasksTime / tasksTicks)}ms`\n\n    if (config.debugBox) {\n      stats.innerHTML = debugMsg\n    } else {\n      console.debug(debugMsg)\n    }\n\n    startTime = performance.now()\n    tasksTime = 0\n    tasksTicks = 0\n    rendersTime = 0\n    rendersTicks = 0\n  }, 1000)\n}\n\nfunction roundNumber (number) {\n  return Math.round(number * 1000) / 1000\n}\n","'use strict'\n\nimport * as config from \"../config\"\n\nlet uid = 0\n\n/**\n * @description This method will return a unique string.\n *\n * @returns {String} The unique string\n */\nexport function generateUid () {\n  return (uid++).toString(36)\n}\n\nexport function randomX () {\n  return randomNumberBetween(100, window.innerWidth - 100)\n}\n\nexport function randomY () {\n  return randomNumberBetween(100, window.innerHeight - 100)\n}\n\nexport function randomNumberBetween (a, b) {\n  return Math.floor(Math.random() * (b - a + 1) + a)\n}\n\nexport function randomColorHex () {\n  return '#' + Math.floor(Math.random() * 16777215).toString(16)\n}\n\nexport function getDotProduct (a, b) {\n  let v = 0\n  let i = a.length\n\n  while (i--) {\n    v += a[i] * b[i]\n  }\n\n  return v\n}\n\nexport function pythagoras (a, b) {\n  return Math.sqrt(a * a + b * b)\n}\n\nexport function adjacentLength (angle, hypotenuse) {\n  return Math.cos(angle * Math.PI / 180) * hypotenuse\n}\n\nexport function oppositeLength (angle, hypotenuse) {\n  return Math.sin(angle * Math.PI / 180) * hypotenuse\n}\n\nexport function getAngleBetweenThreePoints (a, b, c) {\n  const ab = [b.dx - a.dx, b.dy - a.dy]\n  const bc = [c.dx - b.dx, c.dy - b.dy]\n\n  return Math.acos(-getDotProduct(ab, bc) / (pythagoras(...ab) * pythagoras(...bc)))\n}\n\nexport function getCenterBetweenTwoPoints (a, b) {\n  return {\n    dx: (a.dx + b.dx) / 2,\n    dy: (a.dy + b.dy) / 2\n  }\n}\n\nexport function degreesToRadians (degrees) {\n  return degrees * Math.PI / 180\n}\n\nexport function radiansToDegrees (radians) {\n  return radians * 180 / Math.PI\n}\n\nexport function pps(distance) {\n  return distance / config.fpsTarget;\n}\n","'use strict'\n\n// Dependencies\nimport * as config from './config'\nimport * as hooks from './hooks'\nimport * as input from './input'\nimport * as loop from './loop'\nimport * as utils from './utils'\n\n/**\n * @module Platform\n *\n * @description The Platform is primarily responsible for the global configuration of the application. It also observes\n *              the browser window and document objects for changes and for user related actions like resizing and input\n *              events, and also exposes a number of utility functions.\n */\nconst Platform = { config, hooks, input, loop, utils }\n\nexport { Platform }\n","'use strict'\n\n// Dependencies\nimport { Platform } from '../../../Platform'\n\nconst updates = []\n\nexport function collisions (superclass) {\n  return class Collisions extends superclass {\n    /**\n     * @todo Add items with collisions to separate list, and then check moving items against that list, thereby\n     *       allowing stationary items to recieve collision detection too.\n     *\n     * @todo Add toggle to control whether collisions on this item are calculated every tick, or just when the\n     *       item is moving.\n     */\n    // constructor () {\n    //   super(...arguments)\n    // }\n\n    setDxCoordinate (...args) {\n      if (!updates.includes(this)) {\n        updates.push(this)\n      }\n\n      super.setDxCoordinate(...args)\n    }\n\n    setDyCoordinate (...args) {\n      if (!updates.includes(this)) {\n        updates.push(this)\n      }\n\n      super.setDyCoordinate(...args)\n    }\n  }\n}\n\nPlatform.loop.add(() => {\n  const collisions = []\n\n  for (let i1 = 0, n = updates.length; i1 < n; i1++) {\n    for (let i2 = i1 + 1; i2 < n; i2++) {\n      const entity1 = updates[i1]\n      const entity2 = updates[i2]\n\n      const e1radius = entity1.getWidth() / 2\n      const e2radius = entity2.getWidth() / 2\n\n      const { dx: e1dx, dy: e1dy } = entity1.getCenterCoordinates()\n      const { dx: e2dx, dy: e2dy } = entity2.getCenterCoordinates()\n\n      if (Platform.utils.pythagoras(e2dx - e1dx, e2dy - e1dy) < e1radius + e2radius) {\n        collisions[collisions.length] = [entity1, entity2]\n      }\n    }\n  }\n\n  while (collisions.length) {\n    Platform.hooks.fire('collision', collisions.shift())\n  }\n\n  updates.length = 0\n}, Infinity)\n","'use strict'\n\n// Dependencies\nimport { Platform } from '../../../Platform'\nimport { pps } from '../../../Platform/utils'\n\nconst entities = []\n\nexport function gravity (superclass) {\n  return class Gravity extends superclass {\n    constructor () {\n      super(...arguments)\n      entities.push(this)\n\n      this.gravityAmount = 0.4\n      this.gravityDx = 0\n      this.gravityDy = 0\n      this.gravityEnabledDx = true\n      this.gravityEnabledDy = true\n    }\n\n    getGravity () {\n      return {\n        dx: this.gravityDx,\n        dy: this.gravityDy\n      }\n    }\n\n    setGravity ({ dx, dy }) {\n      this.setGravityDx(dx)\n      this.setGravityDy(dy)\n    }\n\n    getGravityDx () {\n      return this.gravityDx\n    }\n\n    setGravityDx (dx) {\n      this.gravityDx = dx\n    }\n\n    disableGravityDx () {\n      this.gravityEnabledDx = false\n    }\n\n    enableGravityDx () {\n      this.gravityEnabledDx = true\n    }\n\n    getGravityDy () {\n      return this.gravityDy\n    }\n\n    setGravityDy (dy) {\n      this.gravityDy = dy\n    }\n\n    disableGravityDy () {\n      this.gravityEnabledDy = false\n    }\n\n    enableGravityDy () {\n      this.gravityEnabledDx = true\n    }\n  }\n}\n\nPlatform.loop.add(() => {\n  for (let entity of entities) {\n    let ballCentre = entity.getCenterCoordinates()\n    let ballGravity = entity.getGravity()\n\n    const angle = Platform.utils.radiansToDegrees(Platform.utils.getAngleBetweenThreePoints({\n      dx: ballCentre.dx,\n      dy: ballGravity.dy\n    }, ballGravity, ballCentre))\n\n    const diffX = entity.gravityEnabledDx ? Platform.utils.adjacentLength(angle, entity.gravityAmount) : 0\n    const diffY = entity.gravityEnabledDy ? Platform.utils.oppositeLength(angle, entity.gravityAmount) : 0\n\n    diffX && entity.setVectorX(entity.getVectorX() + (ballCentre.dx < ballGravity.dx ? diffX : -diffX))\n    diffY && entity.setVectorY(entity.getVectorY() + (ballCentre.dy < ballGravity.dy ? diffY : -diffY))\n  }\n}, 0)\n","'use strict'\n\n// Dependencies\nimport { Platform } from '../../../Platform'\n\nconst entities = []\n\nexport function resistance (superclass) {\n  return class Resistance extends superclass {\n    constructor () {\n      super(...arguments)\n      entities.push(this)\n    }\n  }\n}\n\nPlatform.loop.add(() => {\n  for (let entity of entities) {\n    const vectorX = entity.getVectorX() * 0.998\n    const vectorY = entity.getVectorY() * 0.998\n\n    entity.setVectorX(vectorX < 0.8 && vectorX > -0.8 ? 0 : vectorX)\n    entity.setVectorY(vectorY < 0.8 && vectorY > -0.8 ? 0 : vectorY)\n  }\n}, 0)\n","'use strict'\n\n// Dependencies\nimport { Platform } from '../../../Platform'\nimport { pps } from '../../../Platform/utils'\n\nconst entities = []\n\nexport function vectors (superclass) {\n  return class Vectors extends superclass {\n    constructor () {\n      super(...arguments)\n      entities.push(this)\n\n      this.vectorX = 0\n      this.vectorY = 0\n    }\n\n    /**\n     * @description This method will return the horizontal value of the Vector.\n     *\n     * @returns {Number} The Vectors X axis value\n     */\n    getVectorX () {\n      return this.vectorX\n    }\n\n    /**\n     * @description This method will set the horizontal value of the Vector to the value supplied.\n     */\n    setVectorX (x) {\n      this.vectorX = x\n    }\n\n    /**\n     * @description This method will return the vertical value of the Vector.\n     *\n     * @returns {Number} The Vectors Y axis value\n     */\n    getVectorY () {\n      return this.vectorY\n    }\n\n    /**\n     * @description This method will set the vertical value of the Vector to the value supplied.\n     */\n    setVectorY (y) {\n      this.vectorY = y\n    }\n\n    /**\n     * @description This method will reverse the X value of the Vector.\n     */\n    reverseVectorX () {\n      this.vectorX = -this.vectorX\n    }\n\n    /**\n     * @description This method will reverse the Y value of the Vector.\n     */\n    reverseVectorY (dy) {\n      if (dy) {\n        const vectorY = this.vectorY\n        this.vectorY = dy\n\n        window.requestAnimationFrame(() => {\n          this.vectorY = -vectorY\n        })\n      } else {\n        this.vectorY = -this.vectorY\n      }\n    }\n\n    /**\n     * @description This method will swap the X value of the supplied Vector with this Vector.\n     *\n     * @param {Object} item - The Vector to switch the X value with\n     */\n    reflectVectorX (item) {\n      // Ensure that the Item is valid\n      if (!(item instanceof Vectors)) {\n        throw Error('Item must include the Vector class')\n      }\n\n      this.vectorX = [item.vectorX, item.vectorX = this.vectorX][0]\n    }\n\n    /**\n     * @description This method will swap the Y value of the supplied Vector with this Vector.\n     *\n     * @param {Object} item - The Vector to switch the Y value with\n     */\n    reflectVectorY (item) {\n      // Ensure that the Item is valid\n      if (!(item instanceof Vectors)) {\n        throw Error('Item must include the Vector class')\n      }\n\n      this.vectorY = [item.vectorY, item.vectorY = this.vectorY][0]\n    }\n\n    /**\n     * @description This method will return the magnitude of the Vector.\n     *\n     * @returns {Number} The magnitude of the Vector\n     */\n    getVectorMagnitude () {\n      return Platform.utils.pythagoras(this.vectorX, this.vectorY)\n    }\n\n    /**\n     * @description This method will return the angle of direction for the Vector.\n     *\n     * @returns {Number} The angle of direction of the Vector\n     */\n    getVectorDirection () {\n      const itemCenterCoordinates = super.getCenterCoordinates()\n\n      return Platform.utils.getAngleBetweenThreePoints({\n        dx: itemCenterCoordinates.dx,\n        dy: itemCenterCoordinates.dy + 1\n      }, itemCenterCoordinates, {\n        dx: itemCenterCoordinates.dx + this.vectorX,\n        dy: itemCenterCoordinates.dy + this.vectorY\n      })\n    }\n  }\n}\n\nPlatform.loop.add(() => {\n  for (let entity of entities) {\n    const { dx: ballX, dy: ballY } = entity.getCoordinates()\n\n    entity.setCoordinates({\n      dx: ballX + entity.vectorX,\n      dy: ballY + entity.vectorY\n    })\n  }\n}, Infinity)\n","'use strict'\n\n// Properties\nimport { collisions } from './properties/collisions'\nimport { gravity } from './properties/gravity'\nimport { resistance } from './properties/resistance'\nimport { vectors } from './properties/vectors'\n\nexport class Item {\n  constructor (dx, dy, width, height, canvas) {\n    this._canvas = canvas || document.createElement('canvas')\n    this._ctx = this._canvas.getContext('2d')\n\n    // Set the canvas width and height\n    if (!canvas) {\n      this._canvas.width = width\n      this._canvas.height = height\n    }\n\n    // Store a reference to the draw function and other metadata\n    this.dx = dx\n    this.dy = dy\n  }\n\n  /**\n   * @description This method will return a reference to the canvas element belonging to the Item.\n   *\n   * @returns {Object} The canvas belonging to the Item\n   */\n  getCanvas () {\n    return this._canvas\n  }\n\n  /**\n   * @description This method will return a reference to the context derived from the canvas element belonging to the\n   *              Item.\n   *\n   * @returns {Object} The canvas context belonging to this Item\n   */\n  getContext () {\n    return this._ctx\n  }\n\n  /**\n   * @returns {Number} The width of the canvas object\n   */\n  getWidth () {\n    return this._canvas.width\n  }\n\n  /**\n   * @returns {Number} The height of the canvas object\n   */\n  getHeight () {\n    return this._canvas.height\n  }\n\n  /**\n   * @returns {Object} The true coordinates of the Item\n   */\n  getCoordinates () {\n    return {\n      dx: this.dx,\n      dy: this.dy\n    }\n  }\n\n  /**\n   * @description This method will set the coordinates for the Item with the supplied values\n   *\n   * @param {Object} obj    - The new coordinates of the Item\n   * @param {Number} obj.dx - The new X coordinate to be used\n   * @param {Number} obj.dy - The new Y coordinate to be used\n   */\n  setCoordinates ({ dx, dy }) {\n    this.setDxCoordinate(dx)\n    this.setDyCoordinate(dy)\n  }\n\n  getDxCoordinate () {\n    return this.dx\n  }\n\n  setDxCoordinate (dx) {\n    this.dx = dx\n  }\n\n  getDyCoordinate () {\n    return this.dy\n  }\n\n  setDyCoordinate (dy) {\n    this.dy = dy\n  }\n\n  getCenterCoordinates () {\n    return {\n      dx: this.dx + this._canvas.width / 2,\n      dy: this.dy + this._canvas.height / 2\n    }\n  }\n\n  getHorizontalCenterCoordinate () {\n    return this.dx + this._canvas.width / 2\n  }\n\n  getVerticalCenterCoordinate () {\n    return this.dy + this._canvas.height / 2\n  }\n\n  getMinHorizontalCoordinate () {\n    return this.dx\n  }\n\n  getMaxHorizontalCoordinate () {\n    return this.dx + this._canvas.width\n  }\n\n  getMinVerticalCoordinate () {\n    return this.dy\n  }\n\n  getMaxVerticalCoordinate () {\n    return this._dy + this._canvas.height\n  }\n\n  /**\n   * @description A getter to return the Item class function.\n   *\n   * @returns {Function} A reference to the Item class\n   */\n  get Class () {\n    return Item\n  }\n\n  /**\n   * @description This static method attempts to emulate similar functionality to that found in Scala Traits. There are\n   *              a limited set of static properties available on this class that can be mixed in with the basic\n   *              functionality already available.\n   *\n   * @param {*} properties\n   *\n   * @returns {Item} A new Item with extra functionality from the properties specified\n   */\n  static with (...properties) {\n    return properties.reduce((superclass, property) => {\n      // Ensure that the property is avaiable on this class if the property is supplied as a string\n      if (!Item[property]) {\n        throw Error('Property not found on class')\n      }\n\n      return Item[property](superclass)\n    }, this)\n  }\n\n  static get collisions () {\n    return collisions\n  }\n\n  static get gravity () {\n    return gravity\n  }\n\n  static get resistance () {\n    return resistance\n  }\n\n  static get vectors () {\n    return vectors\n  }\n}\n","'use strict'\n\n// Dependencies\nimport { Item } from '../Item'\nimport { Platform } from '../../Platform'\n\nexport class Layer {\n  constructor (width, height) {\n    // Create the canvas objects\n    this._canvas = document.createElement('canvas')\n    this._ctx = this._canvas.getContext('2d')\n\n    // Initialise the entities\n    this._entities = []\n\n    // Resize the canvas and append it to the DOM\n    this.resizeCanvas(width, height)\n    document.body.appendChild(this._canvas)\n\n    // Add a loop task\n    Platform.loop.add(this.renderLayer, Infinity, this, true)\n  }\n\n  /**\n   * @description This method will return a reference to the canvas element belonging to the Layer.\n   *\n   * @returns {Object} The canvas belonging to the Layer\n   */\n  getCanvas () {\n    return this._canvas\n  }\n\n  /**\n   * @description This method will return a reference to the context derived from the canvas element belonging to the\n   *              Layer.\n   *\n   * @returns {Object} The canvas context belonging to this Layer\n   */\n  getContext () {\n    return this._ctx\n  }\n\n  /**\n   * @description This method will return the visible width of the Layer.\n   *\n   * @returns {Number} The width of the Layer\n   */\n  getWidth () {\n    return this._canvas.width\n  }\n\n  /**\n   * @description This method will return the visible height of the Layer.\n   *\n   * @returns {Number} The height of the Layer\n   */\n  getHeight () {\n    return this._canvas.height\n  }\n\n  addEntity (entity) {\n    // Ensure that the entity is valid\n    if (!(entity instanceof Item)) {\n      throw Error('Entities must be valid')\n    }\n\n    // Draw the entity if possible\n    if (entity.draw) {\n      entity.draw(entity._ctx)\n    }\n\n    // Add the entities to the layer\n    return (this._entities[this._entities.length] = entity)\n  }\n\n  getEntities () {\n    return this._entities\n  }\n\n  /**\n   * @description This method will completely clear the canvas.\n   */\n  clearCanvas () {\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height)\n  }\n\n  /**\n   * @description This method will resize the canvas using the supplied width and height values. If no width or height\n   *              value is supplied the window width or height will be used instead.\n   *\n   * @param {Number=} width  - The desired width to be set, defaults to window.innerWidth\n   * @param {Number=} height - The desired height to be set, defaults to window.innerHeight\n   */\n  resizeCanvas (width = window.innerWidth, height = window.innerHeight) {\n    // Ensure that the Layer boundaries are not locked\n    if (this._boundariesLocked) {\n      throw Error('Cannot resize canvas when boundaries are locked')\n    }\n\n    this._canvas.width = this._width = width\n    this._canvas.height = this._height = height\n  }\n\n  /**\n   * @description This method will lock the boundaries of the Layer, preventing any further manual or automatic resizing\n   *              of the Layer.\n   */\n  lockBoundaries () {\n    this._boundariesLocked = true\n  }\n\n  /**\n   * @description This method will unlock the boundaries of the Layer, allowing manual or automatic resizing of the\n   *              Layer.\n   */\n  unlockBoundaries () {\n    this._boundariesLocked = false\n  }\n\n  renderLayer () {\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height)\n\n    for (let entity of this._entities) {\n      const canvas = entity.getCanvas()\n      const { dx: entityX, dy: entityY } = entity.getCoordinates()\n\n      // Draw a boundry box if enabled\n      if (Platform.config.boundryBoxEnabled) {\n        entity._ctx.strokeRect(0, 0, canvas.width, canvas.height)\n      }\n\n      this._ctx.drawImage(canvas, entityX, entityY)\n    }\n  }\n\n  /**\n   * @description A getter to return the Layer class function.\n   *\n   * @returns {Function} A reference to the Layer class\n   */\n  get Class () {\n    return Layer\n  }\n}\n","'use strict'\n\n// Dependencies\nimport { Item } from './Item'\nimport { Layer } from './Layer'\n\n/**\n * @module View\n *\n * @description The View hosts and maintains all of the visble objects that make up the application. Most importantly,\n *              it manages the drawing and redrawing of these objects during runtime, to ensure a smooth transition\n *              between frames at all times.\n *\n *              Note that objects are drawn onto Layers, and not directly to the View.\n */\nconst View = { Item, Layer }\nconst layers = []\n\n/**\n * @description This method will create a new Layer that will in turn be added to the View.\n *\n * @param {Number=} width  - The width of the Layer\n * @param {Number=} height - The height of the Layer\n *\n * @returns {Layer} The newly created Layer\n */\nView.createLayer = (width, height) => {\n  let layer = layers[layers.length] = new Layer(width, height)\n\n  return layer\n}\n\nView.createItem = ({draw = Function, coordinates: {dx, dy}, dimensions: {width, height}}) => {\n  return new (class extends Item {\n    constructor (draw, dx, dy, width, height) {\n      super(dx, dy, width, height)\n      this.draw = draw\n    }\n  })(draw, dx, dy, width, height)\n}\n\n/**\n * @description This method will return a reference to the Layer with the supplied unique identifier. If no Layer with\n *              the supplied unique identifier is found, then undefined will be returned.\n *\n * @param {String} uid - The unique identifier of the Layer\n *\n * @returns {Layer} The Layer with the supplied unique identifier\n */\nView.getLayer = (uid) => {\n  for (let layer of layers) {\n    if (layer.uid === uid) {\n      return layer\n    }\n  }\n}\n\n/**\n * @description This method will return a reference to all of the Layers within the View.\n *\n * @returns {Layer[]} The Layers within the View\n */\nView.getLayers = () => {\n  return layers\n}\n\n/**\n * To ensure that the application respects the boundaries of the Browser window, we must resize all of the relevant\n * Layers when required.\n */\nwindow.addEventListener('resize', () => {\n  for (let layer of layers) {\n    if (!layer._boundariesLocked) {\n      layer.resizeCanvas()\n    }\n  }\n}, false)\n\nexport { View }\n","'use strict'\n\nexport { Platform } from './Platform'\nexport { View } from './View'\n","'use strict'\n\nimport { Platform, View } from '../../packages/pew/src/main/engine'\nimport { randomNumberBetween } from '../../packages/pew/src/main/engine/Platform/utils';\n\n/**\n * @todo Add check to ensure total energy in the view is constant over time.\n */\n\n window.setFPS = (fps) => Platform.config.fpsTarget = fps;\n\nclass Ball extends View.Item.with('vectors', 'gravity', 'collisions') {\n  constructor () {\n    // Set a random position\n    super(Platform.utils.randomNumberBetween(60, window.innerWidth - 100), Platform.utils.randomNumberBetween(60, window.innerHeight - 100), 20, 20)\n\n    this.color = Platform.utils.randomColorHex()\n\n    // Set a random trajectory\n    this.setVectorX(Platform.utils.randomNumberBetween(-2, 2))\n    this.setVectorY(Platform.utils.randomNumberBetween(-2, 2))\n\n    this.gravityAmount = randomNumberBetween(1, 4) / 100\n  }\n\n  draw (ctx) {\n    const radius = this.getWidth() / 2\n\n    ctx.beginPath()\n    ctx.arc(radius, radius, radius, Math.PI * 2, false)\n    ctx.fillStyle = this.color\n    ctx.fill()\n    ctx.closePath()\n  }\n}\n\nconst layer = View.createLayer()\n\nconst marker = new class extends View.Item {\n  constructor () {\n    super(window.innerWidth / 2, window.innerHeight / 2, 4, 4)\n  }\n\n  draw (ctx) {\n    const radius = this.getWidth() / 2\n\n    ctx.beginPath()\n    ctx.arc(radius, radius, radius, Math.PI * 2, false)\n    ctx.fillStyle = '#000'\n    ctx.fill()\n    ctx.closePath()\n  }\n}()\n\nconst entities = []\nlayer.addEntity(marker)\n\nfor (let i = 0; i < 10; i++) {\n  entities.push(layer.addEntity(new Ball()))\n}\n\nPlatform.hooks.on('collision', (ballA, ballB) => {\n  ballA.reflectVectorX(ballB)\n  ballA.reflectVectorY(ballB)\n})\n\nPlatform.loop.add(() => {\n  const {upArrow, downArrow, leftArrow, rightArrow} = Platform.input.keyboard\n  const {dx, dy} = marker.getCoordinates()\n\n  if (upArrow) {\n    marker.setDyCoordinate(dy - 5)\n  }\n\n  if (downArrow) {\n    marker.setDyCoordinate(dy + 5)\n  }\n\n  if (leftArrow) {\n    marker.setDxCoordinate(dx - 5)\n  }\n\n  if (rightArrow) {\n    marker.setDxCoordinate(dx + 5)\n  }\n\n  for (let entity of entities) {\n    entity.setGravity({ dx, dy })\n  }\n})\n\nPlatform.loop.start()\n"]}